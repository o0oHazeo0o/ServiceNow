#HTML Table Style
$Style = "<Style>
        Body
            {
                Font-Family: Arial;
                Font-Size: 10pt;
                Table Align: Center;
            }
        Table
            {
                Margin: 0px 0px 0px 4px;
                Border: 1px solid rgb(0,0,0);
                Table-Layout: Fixed;
                Margin-Left:auto;
                Margin-Right:auto;
                Width: 100%;
                Font-Family: Arial;
                Font-Size: 10pt;
                Background-Color: rgb(0,0,0);
            }
        TR:Hover TD
            {
                Background-Color: rgb(79,146,233);
                Color: rgb(255,255,255);
            }
        TR:Nth-Child(Odd)
            {
                Background-Color: rgb(231,231,231);
            }
        TR:Nth-Child(Even)
            {
                Background-Color: rgb(255,255,255);
            }
        TH
            {
                Text-Align: Center;
                Color: rgb(0,0,0);
                Padding: 1px 4px 1px 4px;
                Background-Color: rgb(171,171,171)
            }
        TD
            {
                Vertical-Align: Center;
                Text-Align: Center;
                Padding: 1px 4px 1px 4px;
            }
        H1
            {
                Font-Family: Arial;
                Font-Size: 15pt;
                Text-Align: Center;
                Margin-Top:15px;
                Margin-Bottom:20px;
            }
        H2
            {
                Font-Family: Arial;
                Font-Size: 15pt;
                Text-Align: Center;
                Margin-Top:15px;
                Margin-Bottom:20px;
            }
</Style>"

#Create Body
$CBody = @"
<H1>Open Change Requests</H1>
"@
#Create CLCBody
$CLCBody = @"
<H2>Closed Change Requests</H2>
"@

#Create BodyAdd Array
$CBodyAdd = @()

#Create CLCBodyAdd Array
$CLCBodyAdd = @()

#Create user credentials
$SNUser = "<username>"
$SNPass = Get-Content '$env:USERPROFILE\Documents\Scripts\ServiceNow\Creds\SNC.txt' | ConvertTo-SecureString
$SNCreds = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $SNUser,$SNPass

#URI and query perameters for open change requests 
$CUri = "https://subsite.service-now.com/api/now/table/change_request?sysparm_query=state=-1"

#URI and query perameters for closed change requests 
$CLCUri = "https://subsite.service-now.com/api/now/table/change_request?active=false&sysparm_query=ORDERBYDESCnumber&sysparm_limit=10"
        
#Create array for results from URI REST API
$CResult = Invoke-RestMethod -Uri $CUri -Method Get -Credential $SNCreds

#Create array for closed change request results from URI REST API
$CLCResult = Invoke-RestMethod -Uri $CLCUri -Method Get -Credential $SNCreds

#Get data from open change request results array
$CHGS = $CResult.result | ConvertTo-Json | ConvertFrom-Json

#Get data from closed change request results array
$CLCCHGS = $CLCResult.result | ConvertTo-Json | ConvertFrom-Json

#Create array for each change request
foreach($CHG in $CHGS)
    {
        $CArr = New-Object Object
        $CArr | Add-Member NoteProperty 'Number' -Value $CHG.number
        $CArr | Add-Member NoteProperty 'State' -Value $CHG.state
        $CArr | Add-Member NoteProperty 'Start Date' -Value $CHG.start_date
        $CArr | Add-Member NoteProperty 'End Date' -Value $CHG.end_date
        $CArr | Add-Member NoteProperty 'Short Description' -Value $CHG.short_description
        $CArr | Add-Member NoteProperty 'Created By' -Value $CHG.sys_created_by
        $CArr | Add-Member NoteProperty 'Work Started On' -Value $CHG.work_start
        $CArr | Add-Member NoteProperty 'Type' -Value $CHG.type
        $CArr | Add-Member NoteProperty 'System ID' -Value $CHG.sys_id
        $CArr 
        
        #Add change request to BodyAdd array
        $CBodyAdd += $CArr
    }
     
#Add BodyAdd array to Body array, fix header names, and sort by change request number
$CBody += $CBodyAdd | Select 'Number','Short Description','Created By','Work Started On',@{Name="State";Expression={$CHG.state -replace "-1","Implementing"}},'Type','Start Date','End Date' | Sort-Object 'Work Started On' | ConvertTo-Html -Head $Style | Out-String

#Create array for each closed change request
foreach($CLCCHG in $CLCCHGS)
    {
        $CLCArr = New-Object Object
        $CLCArr | Add-Member NoteProperty 'Number' -Value $CLCCHG.number
        $CLCArr | Add-Member NoteProperty 'State' -Value $CLCCHG.state
        $CLCArr | Add-Member NoteProperty 'Start Date' -Value $CLCCHG.start_date
        $CLCArr | Add-Member NoteProperty 'End Date' -Value $CLCCHG.end_date
        $CLCArr | Add-Member NoteProperty 'Short Description' -Value $CLCCHG.short_description
        $CLCArr | Add-Member NoteProperty 'Created By' -Value $CLCCHG.sys_created_by
        $CLCArr | Add-Member NoteProperty 'Closed On' -Value $CLCCHG.closed_at
        $CLCArr | Add-Member NoteProperty 'Type' -Value $CLCCHG.type
        $CLCArr | Add-Member NoteProperty 'System ID' -Value $CLCCHG.sys_id
        $CLCArr 
        
        #Add change request to BodyAdd array
        $CLCBodyAdd += $CLCArr
    }

#Add CLCBodyAdd array to Body array, fix header names, and sort by change request number
$CLCBody += $CLCBodyAdd | Select 'Number','Short Description','Created By','Closed On',@{Name="State";Expression={$CLCCHG.state -replace "3","Closed"}},'Type','Start Date','End Date' | Sort-Object 'Closed On' -Descending | ConvertTo-Html -Head $Style | Out-String

#Convert the report to html format and save to file
ConvertTo-Html -Body "$CBody $CLCBody" -Head $Style | Out-File $env:USERPROFILE\Downloads\CHGReport$(Get-Date -format MMddyyHHmmss).html
